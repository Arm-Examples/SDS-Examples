# Parameters:
# instance.parameter=value                            #(type, mode)         default = 'def value'  : description : [min..max]
#---------------------------------------------------------------------------------------------------
mps3_board.v_path=Board/Corstone-300/vsi/python/      # (string, init-time) default = ''           : Specify path to python folder with scripts for both of VSI and VIO
mps3_board.visualisation.disable-visualisation=1      # (bool  , init-time) default = '0'          : Enable/disable visualisation
mps3_board.uart0.shutdown_on_eot=1                    # (bool  , init-time) default = '0'          : Shutdown simulation when a EOT (ASCII 4) char is transmitted (useful for regression tests when semihosting is not available)
mps3_board.uart0.out_file=-                           #                                            : Route UART stream to stdout
mps3_board.telnetterminal0.start_telnet=0             # (bool  , init-time) default = '1'          : Disable Telnet output
mps3_board.telnetterminal1.start_telnet=0             # (bool  , init-time) default = '1'          : Disable Telnet output
mps3_board.telnetterminal2.start_telnet=0             # (bool  , init-time) default = '1'          : Disable Telnet output
mps3_board.telnetterminal5.start_telnet=0             # (bool  , init-time) default = '1'          : Disable Telnet output
mps3_board.telnetterminal0.quiet=1                    # (bool  , init-time) default = '0'          : Avoid output on stdout/stderr   
mps3_board.telnetterminal1.quiet=1                    # (bool  , init-time) default = '0'          : Avoid output on stdout/stderr      
mps3_board.telnetterminal2.quiet=1                    # (bool  , init-time) default = '0'          : Avoid output on stdout/stderr      
mps3_board.telnetterminal5.quiet=1                    # (bool  , init-time) default = '0'          : Avoid output on stdout/stderr      
#ethosu.num_macs=256                                  # (int   , init-time) default = '0x80'       : Number of 8x8 MACs performed per cycle
#---------------------------------------------------------------------------------------------------
